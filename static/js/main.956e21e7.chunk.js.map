{"version":3,"sources":["md/home/index.md","md/gerbera/index.md","md/gerbera/index.tsx","router/util.ts","router/routeWithLayout.tsx","components/Layout/Navigator/index.tsx","components/Layout/index.tsx","components/MdView/index.tsx","router/index.tsx","App.tsx","index.tsx"],"names":["module","exports","UseContext","React","memo","props","recoverPath","currentRoute","childRoutes","length","nextRoute","find","route","path","lastChildRoutePath","children","RedirectRoute","routes","pathname","location","redirectUrl","to","homePath","renderRouterWithChildren","parentRoute","childrenRender","map","child","index","CustomerRoute","Layout","layout","layoutProps","RouterComponent","component","restProps","ignoreCache","render","PrivateRoute","rest","PREFIX","Mavigator","className","matchedPath","routers","useLocation","router","useMemo","includes","useRouterPathMatch","cls","name","key","title","MdView","md","view","process","dangerouslySetInnerHTML","__html","WEB_ROOT","getPath","home","GerberaMd","RootRouter","undefined","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.956e21e7.chunk.js","sourcesContent":["// Module\nvar code = \"<p>这个博客主要用来记录 react 学习中遇到的点点滴滴，巩固知识点。</p> <hr> \";\n// Exports\nmodule.exports = code;","// Module\nvar code = \"<h1 id=\\\"非洲菊\\\">非洲菊</h1> \";\n// Exports\nmodule.exports = code;","import React from 'react';\n\nconst UseContext: React.FC = React.memo(function UseContext(props) {\n  return <div>非洲菊</div>;\n});\n\nexport default UseContext;\n","import { IRoute } from './interface';\nimport { find } from 'lodash';\n\nexport const recoverPath: (currentRoute?: IRoute, childRoutes?: IRoute[]) => string = (\n  currentRoute,\n  childRoutes,\n) => {\n  if (currentRoute && childRoutes?.length) {\n    const matchedChildRoute = find(\n      childRoutes,\n      (route) => route.path === currentRoute?.lastChildRoutePath,\n    );\n\n    const nextRoute = matchedChildRoute || childRoutes[0];\n    return recoverPath(nextRoute, nextRoute.children);\n  }\n  return currentRoute?.path || '';\n};\n","import { IRoute } from './interface';\nimport { Redirect, Route, RouteComponentProps, RouteProps, Switch } from 'react-router-dom';\nimport { map } from 'lodash';\nimport { recoverPath } from './util';\nimport React from 'react';\nimport { homePath } from '.';\n\ntype IRouteWithLayoutProps = Omit<RouteProps, 'component' | 'render' | 'children'> & {\n  childrenRender: React.ReactNode;\n  childRoutes?: IRoute[];\n  parentRoute?: IRoute;\n  route?: IRoute;\n} & Partial<IRoute>;\n\nconst RedirectRoute: React.FC<\n  Partial<RouteComponentProps> & {\n    routes?: IRoute[];\n    route?: IRoute;\n  }\n> = React.memo(function ({ route, routes, location }) {\n  const { pathname } = location || {};\n  const redirectUrl = recoverPath(route, routes);\n  if (redirectUrl !== pathname) {\n    return <Redirect to={redirectUrl || homePath} />;\n  }\n  return <Redirect to={homePath} />;\n});\n\nexport const renderRouterWithChildren = (\n  route: IRoute | undefined,\n  children?: IRoute[],\n  parentRoute?: IRoute,\n) => {\n  const childrenRender = children ? (\n    <Switch>\n      {map(children, (child, index) => {\n        return renderRouterWithChildren(child, child.children, route);\n      })}\n      <RedirectRoute routes={children} route={route} />\n    </Switch>\n  ) : null;\n\n  return (\n    <CustomerRoute\n      childrenRender={childrenRender}\n      {...route}\n      route={route}\n      parentRoute={parentRoute}\n      childRoutes={children}\n    />\n  );\n};\n\nconst CustomerRoute: React.FC<IRouteWithLayoutProps> = React.memo(function CustomerRoute(props) {\n  const {\n    childrenRender,\n    route,\n    parentRoute,\n    childRoutes,\n    layout: Layout,\n    layoutProps,\n    children,\n    component: RouterComponent,\n    ...restProps\n  } = props;\n\n  if (parentRoute && !parentRoute.ignoreCache) {\n    parentRoute.lastChildRoutePath = route?.path;\n  }\n  if (!route) {\n    return childrenRender as React.ReactElement;\n  }\n\n  if (!childRoutes) {\n    if (RouterComponent) {\n      if (Layout) {\n        return (\n          <PrivateRoute\n            {...restProps}\n            render={() => (\n              <Layout route={route} {...layoutProps}>\n                <RouterComponent {...restProps} />\n              </Layout>\n            )}\n          />\n        );\n      }\n      return <PrivateRoute {...restProps} render={() => <RouterComponent {...restProps} />} />;\n    }\n  }\n\n  if (childRoutes) {\n    if (Layout) {\n      return (\n        <PrivateRoute\n          {...restProps}\n          render={() => (\n            <Layout childRoutes={childRoutes} route={route} {...layoutProps}>\n              {childrenRender}\n            </Layout>\n          )}\n        />\n      );\n    }\n  }\n  return childrenRender as React.ReactElement;\n});\ntype PrivateRouteProps = Required<Pick<RouteProps, 'render'>> &\n  Omit<RouteProps, 'component' | 'render'>;\nexport const PrivateRoute = ({ render, ...rest }: PrivateRouteProps) => {\n  return <Route {...rest} render={render} />;\n};\n","import { Link } from 'react-router-dom';\nimport { find } from 'lodash';\nimport { useLocation } from 'react-router';\nimport React, { useMemo } from 'react';\nimport cls from 'classnames';\nimport './index.less';\nimport { IRoute } from '../../../router/interface';\n\nconst PREFIX = 'Mavigator';\n\ninterface IProps {\n  className?: string;\n  childRoutes: IRoute[];\n}\n\nconst useRouterPathMatch = (routers: IRoute[]) => {\n  const location = useLocation();\n  const router = useMemo(() => {\n    return find(routers, (router) => location.pathname.includes(router.path));\n  }, [location.pathname, routers]);\n  return router?.path;\n};\n\nconst Mavigator: React.FC<IProps> = React.memo(function AppThirdNavigator(props) {\n  const { className, childRoutes } = props;\n  const matchedPath = useRouterPathMatch(childRoutes);\n\n  return (\n    <div className={cls(`${PREFIX}`, className)}>\n      {childRoutes.map((router) =>\n        matchedPath === router.path ? (\n          <span className={cls(`${PREFIX}-item`, 'is-active')}>\n            {router.name}\n            <div className={`${PREFIX}-activeBar`} />\n          </span>\n        ) : (\n          <Link className={cls(`${PREFIX}-item`)} key={router.path} to={router.path}>\n            {router.name}\n            <div className={`${PREFIX}-activeBar`} />\n          </Link>\n        ),\n      )}\n    </div>\n  );\n});\n\nexport default Mavigator;\n","import React from 'react';\nimport cls from 'classnames';\nimport './index.less';\nimport { IRoute } from '../../router/interface';\nimport Mavigator from './Navigator';\n\nconst PREFIX = 'Layout';\n\ninterface IProps {\n  title?: React.ReactNode;\n  route?: IRoute;\n  childRoutes: IRoute[];\n}\n\nconst Layout: React.FC<IProps> = React.memo(function Layout(props) {\n  const { title, childRoutes, children } = props;\n  return (\n    <div className={cls(`${PREFIX}`)}>\n      <div className={`${PREFIX}-head`}>\n        <span className={`${PREFIX}-headTitle`}>{title}</span>\n      </div>\n      <div className={`${PREFIX}-body`}>\n        <div className={`${PREFIX}-bodyLeft`}>\n          <Mavigator childRoutes={childRoutes} />\n        </div>\n        <div className={`${PREFIX}-bodyRight`}>{children}</div>\n      </div>\n    </div>\n  );\n});\n\nexport default Layout;\n","import React from 'react';\nimport cls from 'classnames';\nimport './index.less';\n\nconst PREFIX = 'MdView';\n\ninterface IProps {\n  className?: string;\n  md: string;\n  view?: React.ReactNode;\n}\n\nconst MdView: React.FC<IProps> = React.memo(function MdView(props) {\n  const isDevelopment = process.env.NODE_ENV === 'development';\n  const { className, md, view } = props;\n  return (\n    <div className={cls(`${PREFIX}`, className)}>\n      {isDevelopment && view && <div className={`${PREFIX}-body`}>{view}</div>}\n      <div className={`${PREFIX}-md`} dangerouslySetInnerHTML={{ __html: md }}></div>\n    </div>\n  );\n});\n\nexport default MdView;\n","import home from '../md/home/index.md';\nimport GerberaMd from '../md/gerbera/index.md';\nimport GerberaView from '../md/gerbera';\nimport { Switch, Redirect, BrowserRouter } from 'react-router-dom';\nimport { renderRouterWithChildren } from './routeWithLayout';\nimport Layout from '../components/Layout';\nimport React from 'react';\nimport MdView from '../components/MdView';\nimport { IRoute } from './interface';\n\nconst WEB_ROOT = process.env.WEB_ROOT || '/';\n\nfunction getPath(path: string) {\n  return `${WEB_ROOT}${path}`;\n}\n\nexport const homePath = getPath('/home');\nconst routes: IRoute[] = [\n  {\n    path: WEB_ROOT,\n    layout: Layout,\n    layoutProps: { title: 'react 解析' },\n    ignoreCache: true,\n    children: [\n      {\n        path: homePath,\n        name: 'home',\n        component: () => <MdView md={home} />,\n      },\n      {\n        path: getPath('/gerbera'),\n        name: 'useEffect',\n        component: () => <MdView md={GerberaMd} view={<GerberaView />} />,\n      },\n    ],\n  },\n];\n\nconst RootRouter = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        {renderRouterWithChildren(undefined, routes)}\n        <Redirect to={homePath} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default RootRouter;\n","import React from 'react';\nimport RootRouter from './router';\nimport './index.less';\n\nconst App: React.FC = React.memo(function App(props) {\n  return <RootRouter />;\n});\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}